/* 
 * Iconomi API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Balance
    /// </summary>
    [DataContract]
        public partial class Balance :  IEquatable<Balance>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Balance" /> class.
        /// </summary>
        /// <param name="currency">currency.</param>
        /// <param name="daaList">daaList.</param>
        /// <param name="assetList">assetList.</param>
        public Balance(string currency = default(string), List<BalanceEntry> daaList = default(List<BalanceEntry>), List<BalanceEntry> assetList = default(List<BalanceEntry>))
        {
            this.Currency = currency;
            this.DaaList = daaList;
            this.AssetList = assetList;
        }
        
        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or Sets DaaList
        /// </summary>
        [DataMember(Name="daaList", EmitDefaultValue=false)]
        public List<BalanceEntry> DaaList { get; set; }

        /// <summary>
        /// Gets or Sets AssetList
        /// </summary>
        [DataMember(Name="assetList", EmitDefaultValue=false)]
        public List<BalanceEntry> AssetList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Balance {\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  DaaList: ").Append(DaaList).Append("\n");
            sb.Append("  AssetList: ").Append(AssetList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Balance);
        }

        /// <summary>
        /// Returns true if Balance instances are equal
        /// </summary>
        /// <param name="input">Instance of Balance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Balance input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Currency == input.Currency ||
                    (this.Currency != null &&
                    this.Currency.Equals(input.Currency))
                ) && 
                (
                    this.DaaList == input.DaaList ||
                    this.DaaList != null &&
                    input.DaaList != null &&
                    this.DaaList.SequenceEqual(input.DaaList)
                ) && 
                (
                    this.AssetList == input.AssetList ||
                    this.AssetList != null &&
                    input.AssetList != null &&
                    this.AssetList.SequenceEqual(input.AssetList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Currency != null)
                    hashCode = hashCode * 59 + this.Currency.GetHashCode();
                if (this.DaaList != null)
                    hashCode = hashCode * 59 + this.DaaList.GetHashCode();
                if (this.AssetList != null)
                    hashCode = hashCode * 59 + this.AssetList.GetHashCode();
                return hashCode;
            }
        }
    }
}
